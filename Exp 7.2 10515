import java.sql.*;
import java.util.*;

// Main class with everything inside
public class StudentManagerApp {

    // Student Model
    static class Student {
        private int id;
        private String name;
        private String dept;
        private double marks;

        public Student(int id, String name, String dept, double marks) {
            this.id = id;
            this.name = name;
            this.dept = dept;
            this.marks = marks;
        }

        public int getId() { return id; }
        public String getName() { return name; }
        public String getDept() { return dept; }
        public double getMarks() { return marks; }
    }

    // Controller
    static class StudentController {
        private Connection conn;

        public StudentController() throws SQLException {
            conn = DriverManager.getConnection(
                "jdbc:mysql://localhost:3306/schooldb", "root", "your_password");
        }

        public void addStudent(Student s) throws SQLException {
            String sql = "INSERT INTO Student VALUES (?, ?, ?, ?)";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setInt(1, s.getId());
            ps.setString(2, s.getName());
            ps.setString(3, s.getDept());
            ps.setDouble(4, s.getMarks());
            ps.executeUpdate();
        }

        public void viewStudents() throws SQLException {
            ResultSet rs = conn.createStatement().executeQuery("SELECT * FROM Student");
            while (rs.next()) {
                System.out.printf("%d - %s - %s - %.2f\n",
                    rs.getInt(1), rs.getString(2), rs.getString(3), rs.getDouble(4));
            }
        }

        public void updateStudent(Student s) throws SQLException {
            String sql = "UPDATE Student SET Name=?, Department=?, Marks=? WHERE StudentID=?";
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, s.getName());
            ps.setString(2, s.getDept());
            ps.setDouble(3, s.getMarks());
            ps.setInt(4, s.getId());
            ps.executeUpdate();
        }

        public void deleteStudent(int id) throws SQLException {
            PreparedStatement ps = conn.prepareStatement("DELETE FROM Student WHERE StudentID=?");
            ps.setInt(1, id);
            ps.executeUpdate();
        }
    }

    // Main View (Menu)
    public static void main(String[] args) {
        try (Scanner sc = new Scanner(System.in)) {
            StudentController ctrl = new StudentController();
            while (true) {
                System.out.println("\n1. Add  2. View  3. Update  4. Delete  5. Exit");
                System.out.print("Choose: ");
                int ch = sc.nextInt();

                if (ch == 1) {
                    System.out.print("ID: ");
                    int id = sc.nextInt(); sc.nextLine();
                    System.out.print("Name: ");
                    String name = sc.nextLine();
                    System.out.print("Dept: ");
                    String dept = sc.nextLine();
                    System.out.print("Marks: ");
                    double marks = sc.nextDouble();
                    ctrl.addStudent(new Student(id, name, dept, marks));
                    System.out.println("Added.");
                } else if (ch == 2) {
                    ctrl.viewStudents();
                } else if (ch == 3) {
                    System.out.print("ID to update: ");
                    int id = sc.nextInt(); sc.nextLine();
                    System.out.print("New Name: ");
                    String name = sc.nextLine();
                    System.out.print("New Dept: ");
                    String dept = sc.nextLine();
                    System.out.print("New Marks: ");
                    double marks = sc.nextDouble();
                    ctrl.updateStudent(new Student(id, name, dept, marks));
                    System.out.println("Updated.");
                } else if (ch == 4) {
                    System.out.print("ID to delete: ");
                    int id = sc.nextInt();
                    ctrl.deleteStudent(id);
                    System.out.println("Deleted.");
                } else if (ch == 5) {
                    System.out.println("Goodbye!");
                    break;
                } else {
                    System.out.println("Invalid option.");
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

//SQL Table

CREATE DATABASE IF NOT EXISTS schooldb;
USE schooldb;

CREATE TABLE Student (
    StudentID INT PRIMARY KEY,
    Name VARCHAR(100),
    Department VARCHAR(50),
    Marks DOUBLE
);
